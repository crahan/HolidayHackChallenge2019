{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TL;DR # Introduction # Welcome to my write-up of the 2019 SANS Holiday Hack Challenge aka KringleCon 2: Turtle Doves . After having such an awesome time helping Santa and all the Elves during KringleCon in 2018 I was super excited when an even bigger event was announcement for 2019. Elf University is one of the most renowned places on earth and a location I've always wanted to visit. No way I was going to miss this opportunity! I was very honored to finish KringleCon with a super honorable mention and while I initially only planned to help my festive friends at the North Pole out with a new series of exciting challenges I ultimately decided that I couldn't really skip submitting a write-up. Last year I went with a PDF report and this year I'm submitting both this online write-up and a series of videos to help illustrate how I solved each of the main and hint challenges. Thanks for taking the time to read through my write-up and I hope you gain something from it. If you have any questions, please feel free to ping me on Twitter or simply leave a comment on one of the videos. Answers # Talk to Santa & Find the Turtle Doves : Student Union fireplace Unredact Threatening Document : DEMAND Windows Log Analysis: Evaluate Attack Outcome : supatree Windows Log Analysis: Determine Attacker Technique : ntdsutil Network Log Analysis: Determine Compromised System : 192.168.134.130 Splunk : Kent you are so unfair. And we were going to make you the king of the Winter Carnival. Get Access To The Steam Tunnels : Krampus Hollyfeld Bypassing the Frido Sleigh CAPTEHA : 8Ia8LiZEwvyZr2WO Retrieve Scraps of Paper from Server : Super Sled-o-matic Recover Cleartext Document : Machine Learning Sleigh Route Finder Open the Sleigh Shop Door : The Tooth Fairy Filter Out Poisoned Sources of Weather Data : 0807198508261964 Note : Talk to Santa in the Quad and Find the Turtle Doves do not require any answers to be submitted as these objectives are there to set the stage, point you in the right direction, and ensure you visit all areas of Elf University. The write-up for both these objectives has been consolidated here . Elf University Map # Click for larger version. Full Narrative # Arrive Whose grounds these are, I think I know His home is in the North Pole though He will not mind me traipsing here To watch his students learn and grow Meet Santa Some other folk might stop and sneer \"Two turtle doves, this man did rear?\" I'll find the birds, come push or shove Objectives given: I'll soon clear Doves Found Upon discov'ring each white dove, The subject of much campus love, I find the challenges are more Than one can count on woolen glove. Strange Man Who wandered thus through closet door? Ho ho, what's this? What strange boudoir! Things here cannot be what they seem That portal's more than clothing store. Meet Krampus Who enters contests by the ream And lives in tunnels meant for steam? This Krampus bloke seems rather strange And yet I must now join his team... CAPTEHA Despite this fellow's funk and mange My fate, I think, he's bound to change. What is this contest all about? His victory I shall arrange! Decrypt Router HW Paper To arms, my friends! Do scream and shout! Some villain targets Santa's route! What scum - what filth would seek to end Kris Kringle's journey while he's out? TF Plot Reveal Surprised, I am, but \"shock\" may tend To overstate and condescend. 'Tis little more than plot reveal That fairies often do extend Problem Solver And yet, despite her jealous zeal, My skills did win, my hacking heal! No dental dealer can so keep Our red-clad hero in ordeal! Cliff Hanger This Christmas must now fall asleep, But next year comes, and troubles creep. And Jack Frost hasn't made a peep, And Jack Frost hasn't made a peep... KringleCon 3: Jack Frost? # After thwarting the Tooth Fairy's dastardly plans and meeting up with Santa and Krampus at the top of the Bell Tower at Elf University you'll find a letter in the back left corner of the room. It appears that the Tooth Fairy wasn't working alone! Could this be a hint for 2020? Will we be facing off with Jack Frost at KringleCon 3? I'll guess we'll have to wait and see... queue ominous music .","title":"TL;DR"},{"location":"#tldr","text":"","title":"TL;DR"},{"location":"#introduction","text":"Welcome to my write-up of the 2019 SANS Holiday Hack Challenge aka KringleCon 2: Turtle Doves . After having such an awesome time helping Santa and all the Elves during KringleCon in 2018 I was super excited when an even bigger event was announcement for 2019. Elf University is one of the most renowned places on earth and a location I've always wanted to visit. No way I was going to miss this opportunity! I was very honored to finish KringleCon with a super honorable mention and while I initially only planned to help my festive friends at the North Pole out with a new series of exciting challenges I ultimately decided that I couldn't really skip submitting a write-up. Last year I went with a PDF report and this year I'm submitting both this online write-up and a series of videos to help illustrate how I solved each of the main and hint challenges. Thanks for taking the time to read through my write-up and I hope you gain something from it. If you have any questions, please feel free to ping me on Twitter or simply leave a comment on one of the videos.","title":"Introduction"},{"location":"#answers","text":"Talk to Santa & Find the Turtle Doves : Student Union fireplace Unredact Threatening Document : DEMAND Windows Log Analysis: Evaluate Attack Outcome : supatree Windows Log Analysis: Determine Attacker Technique : ntdsutil Network Log Analysis: Determine Compromised System : 192.168.134.130 Splunk : Kent you are so unfair. And we were going to make you the king of the Winter Carnival. Get Access To The Steam Tunnels : Krampus Hollyfeld Bypassing the Frido Sleigh CAPTEHA : 8Ia8LiZEwvyZr2WO Retrieve Scraps of Paper from Server : Super Sled-o-matic Recover Cleartext Document : Machine Learning Sleigh Route Finder Open the Sleigh Shop Door : The Tooth Fairy Filter Out Poisoned Sources of Weather Data : 0807198508261964 Note : Talk to Santa in the Quad and Find the Turtle Doves do not require any answers to be submitted as these objectives are there to set the stage, point you in the right direction, and ensure you visit all areas of Elf University. The write-up for both these objectives has been consolidated here .","title":"Answers"},{"location":"#elf-university-map","text":"Click for larger version.","title":"Elf University Map"},{"location":"#full-narrative","text":"Arrive Whose grounds these are, I think I know His home is in the North Pole though He will not mind me traipsing here To watch his students learn and grow Meet Santa Some other folk might stop and sneer \"Two turtle doves, this man did rear?\" I'll find the birds, come push or shove Objectives given: I'll soon clear Doves Found Upon discov'ring each white dove, The subject of much campus love, I find the challenges are more Than one can count on woolen glove. Strange Man Who wandered thus through closet door? Ho ho, what's this? What strange boudoir! Things here cannot be what they seem That portal's more than clothing store. Meet Krampus Who enters contests by the ream And lives in tunnels meant for steam? This Krampus bloke seems rather strange And yet I must now join his team... CAPTEHA Despite this fellow's funk and mange My fate, I think, he's bound to change. What is this contest all about? His victory I shall arrange! Decrypt Router HW Paper To arms, my friends! Do scream and shout! Some villain targets Santa's route! What scum - what filth would seek to end Kris Kringle's journey while he's out? TF Plot Reveal Surprised, I am, but \"shock\" may tend To overstate and condescend. 'Tis little more than plot reveal That fairies often do extend Problem Solver And yet, despite her jealous zeal, My skills did win, my hacking heal! No dental dealer can so keep Our red-clad hero in ordeal! Cliff Hanger This Christmas must now fall asleep, But next year comes, and troubles creep. And Jack Frost hasn't made a peep, And Jack Frost hasn't made a peep...","title":"Full Narrative"},{"location":"#kringlecon-3-jack-frost","text":"After thwarting the Tooth Fairy's dastardly plans and meeting up with Santa and Krampus at the top of the Bell Tower at Elf University you'll find a letter in the back left corner of the room. It appears that the Tooth Fairy wasn't working alone! Could this be a hint for 2020? Will we be facing off with Jack Frost at KringleCon 3? I'll guess we'll have to wait and see... queue ominous music .","title":"KringleCon 3: Jack Frost?"},{"location":"challenges/c1/","text":"Talk to Santa & Find the Turtle Doves # Request # This is a little embarrassing, but I need your help. Our KringleCon turtle dove mascots are missing! They probably just wandered off. Can you please help find them? To help you search for them and get acquainted with KringleCon, I\u2019ve created some objectives for you. You can see them in your badge. Where's your badge? Oh! It's that big, circle emblem on your chest - give it a tap! We made them in two flavors - one for our new guests, and one for those who've attended both KringleCons. After you find the Turtle Doves and complete objectives 2-5, please come back and let me know. Not sure where to start? Try hopping around campus and talking to some elves. If you help my elves with some quicker problems, they'll probably remember clues for the objectives. Resources # None Solution # This objective, together with Talk to Santa in the Quad , doesn't require any answers to be submitted as it's there to set the stage, point you in the right direction, and ensure you visit all areas of Elf University. To complete objective 0 and to learn more about the missing doves talk to Santa in the Quad. Once you've located the doves near the Student Union fireplace and complete objectives 2-5 objective 1 will be marked as completed and Santa will continue the conversation as indicated in the response section below. Answer # Michael and Jane are near the Student Union fireplace. Response # Thank you for finding Jane and Michael, our two turtle doves! I\u2019ve got an uneasy feeling about how they disappeared. Turtle doves wouldn\u2019t wander off like that. Someone must have stolen them! Please help us find the thief! It\u2019s a moral imperative! I think you should look for an entrance to the steam tunnels and solve Challenge 6 and 7 too! Gosh, I can\u2019t help but think: Winds in the East, snow coming in... Like something is brewing and about to begin! Can\u2019t put my finger on what lies in store, But I fear what\u2019s to happen all happened before!","title":"Talk to Santa & Find the Turtle Doves"},{"location":"challenges/c1/#talk-to-santa-find-the-turtle-doves","text":"","title":"Talk to Santa &amp; Find the Turtle Doves"},{"location":"challenges/c1/#request","text":"This is a little embarrassing, but I need your help. Our KringleCon turtle dove mascots are missing! They probably just wandered off. Can you please help find them? To help you search for them and get acquainted with KringleCon, I\u2019ve created some objectives for you. You can see them in your badge. Where's your badge? Oh! It's that big, circle emblem on your chest - give it a tap! We made them in two flavors - one for our new guests, and one for those who've attended both KringleCons. After you find the Turtle Doves and complete objectives 2-5, please come back and let me know. Not sure where to start? Try hopping around campus and talking to some elves. If you help my elves with some quicker problems, they'll probably remember clues for the objectives.","title":"Request"},{"location":"challenges/c1/#resources","text":"None","title":"Resources"},{"location":"challenges/c1/#solution","text":"This objective, together with Talk to Santa in the Quad , doesn't require any answers to be submitted as it's there to set the stage, point you in the right direction, and ensure you visit all areas of Elf University. To complete objective 0 and to learn more about the missing doves talk to Santa in the Quad. Once you've located the doves near the Student Union fireplace and complete objectives 2-5 objective 1 will be marked as completed and Santa will continue the conversation as indicated in the response section below.","title":"Solution"},{"location":"challenges/c1/#answer","text":"Michael and Jane are near the Student Union fireplace.","title":"Answer"},{"location":"challenges/c1/#response","text":"Thank you for finding Jane and Michael, our two turtle doves! I\u2019ve got an uneasy feeling about how they disappeared. Turtle doves wouldn\u2019t wander off like that. Someone must have stolen them! Please help us find the thief! It\u2019s a moral imperative! I think you should look for an entrance to the steam tunnels and solve Challenge 6 and 7 too! Gosh, I can\u2019t help but think: Winds in the East, snow coming in... Like something is brewing and about to begin! Can\u2019t put my finger on what lies in store, But I fear what\u2019s to happen all happened before!","title":"Response"},{"location":"challenges/c10/","text":"","title":"Recover Cleartext Document"},{"location":"challenges/c11/","text":"","title":"Open the Sleigh Shop Door"},{"location":"challenges/c12/","text":"","title":"Filter Out Poisoned Sources of Weather Data"},{"location":"challenges/c2/","text":"","title":"Unredact Threatening Document"},{"location":"challenges/c3/","text":"","title":"Windows Log Analysis - Evaluate Attack Outcome"},{"location":"challenges/c4/","text":"","title":"Windows Log Analysis - Determine Attacker Technique"},{"location":"challenges/c5/","text":"","title":"Network Log Analysis - Determine Compromised System"},{"location":"challenges/c6/","text":"","title":"Splunk"},{"location":"challenges/c7/","text":"","title":"Get Access to the Steam Tunnels"},{"location":"challenges/c8/","text":"","title":"Bypassing the Frido Sleigh CAPTEHA"},{"location":"challenges/c9/","text":"","title":"Retrieve the Scraps of Paper from Server"},{"location":"conversations/alabaster-snowball/","text":"","title":"Alabaster Snowball"},{"location":"conversations/bushy-evergreen/","text":"","title":"Bushy Evergreen"},{"location":"conversations/holly-evergreen/","text":"","title":"Holly Evergreen"},{"location":"conversations/kent-tinseltooth/","text":"","title":"Kent Tinseltooth"},{"location":"conversations/krampus/","text":"","title":"Krampus"},{"location":"conversations/minty-candycane/","text":"","title":"Minty Candycane"},{"location":"conversations/pepper-minstix/","text":"","title":"Pepper Minstix"},{"location":"conversations/professor-banas/","text":"","title":"Professor Banas"},{"location":"conversations/santa/","text":"","title":"Santa"},{"location":"conversations/shinny-upatree/","text":"","title":"Shinny Upatree"},{"location":"conversations/sparkle-redberry/","text":"","title":"Sparkle Redberry"},{"location":"conversations/sugarplum-mary/","text":"","title":"SugarPlum Mary"},{"location":"conversations/tangle-coalbox/","text":"","title":"Tangle Coalbox"},{"location":"conversations/tooth-fairy/","text":"","title":"Tooth Fairy"},{"location":"conversations/turtle-doves/","text":"","title":"Turtle Doves"},{"location":"conversations/wunorse-openslae/","text":"","title":"Wunorse Openslae"},{"location":"hints/h10/","text":"","title":"Holly Evergreen - Mongo Pilfer"},{"location":"hints/h11/","text":"","title":"Kent Tinseltooth - Smart Braces"},{"location":"hints/h12/","text":"","title":"Wunorse Openslae - Zeek JSON Analysis"},{"location":"hints/h3/","text":"","title":"Bushy Evergreen - Escape Ed"},{"location":"hints/h4/","text":"","title":"SugarPlum Mary - Linux Path"},{"location":"hints/h5/","text":"","title":"Sparkle Redberry - Xmas Cheer"},{"location":"hints/h6/","text":"","title":"Tangle Coalbox - Frosty Keypad"},{"location":"hints/h7/","text":"","title":"Minty Candycane - Holiday Hack Trail"},{"location":"hints/h8/","text":"","title":"Alabaster Snowball - Nyanshell"},{"location":"hints/h9/","text":"","title":"Pepper Minstix - Graylog"},{"location":"misc/badge_hints/","text":"Badge Hints # Minty Candycane # Web App Pen Testing : Web Apps: A Trailhead Bitting Templates : Deviant's Key Decoding Templates Key Bitting : Optical Decoding of Keys Kent Tinseltooth # Iptables : Iptables Chrome Dev Tools : Chrome Dev Tools Edge Dev Tools : Edge Dev Tools Firefox Dev Tools : Firefox Dev Tools Safari Dev Tools : Safari Dev Tools Curl Dev Tools : Curl Dev Tools Lynx Dev Tools : Lynx Dev Tools Bushy Evergreen # Deep Blue CLI Posting : Eric Conrad on DeepBlueCLI Deep Blue CLI on Github : Github page for DeepBlueCLI ed Editor Basics : Ed Is The Standard Text Editor Holy Evergreen # MongoDB : MongoDB Documentation Reverse Engineering : Reversing Crypto the Easy Way Tanble Coalbox # Frosty Keypad : \"One digit is repeated once, it's prime, and you can see which keys were used Pepper Minstix # SQLMap Tamper Scripts : Sqlmap Tamper Scripts SQL Injection : SQL Injection from OWASP Graylog : Graylog Docs Event IDs and Sysmon : (Events and Sysmon) SugarPlum Mary # Event Query Language : EQL Threat Hunting Sysmon : Sysmon By Carlos Perez Linux Path : \"Green words matter, files must be found, and the terminal's $PATH matters.\" Wunorse Openslae # Jq : Parsing Zeek JSON Logs with JQ Finding Bad in Web Logs : \"Do you see any LFI , XSS , Shellshock , or SQLi ?\" Alabaster Snowball # Machine Learning : Machine Learning Use Cases for Cyber Security User's Shells : \"On Linux, a user's shell is determined by the contents of /etc/passwd\" Chatter? : \"sudo -l says I can run a command as root. What does it do?\" Sparkle Redberry # PowerShell : SANS' PowerShell Cheat Sheet RITA : RITA's homepage","title":"Badge Hints"},{"location":"misc/badge_hints/#badge-hints","text":"","title":"Badge Hints"},{"location":"misc/badge_hints/#minty-candycane","text":"Web App Pen Testing : Web Apps: A Trailhead Bitting Templates : Deviant's Key Decoding Templates Key Bitting : Optical Decoding of Keys","title":"Minty Candycane"},{"location":"misc/badge_hints/#kent-tinseltooth","text":"Iptables : Iptables Chrome Dev Tools : Chrome Dev Tools Edge Dev Tools : Edge Dev Tools Firefox Dev Tools : Firefox Dev Tools Safari Dev Tools : Safari Dev Tools Curl Dev Tools : Curl Dev Tools Lynx Dev Tools : Lynx Dev Tools","title":"Kent Tinseltooth"},{"location":"misc/badge_hints/#bushy-evergreen","text":"Deep Blue CLI Posting : Eric Conrad on DeepBlueCLI Deep Blue CLI on Github : Github page for DeepBlueCLI ed Editor Basics : Ed Is The Standard Text Editor","title":"Bushy Evergreen"},{"location":"misc/badge_hints/#holy-evergreen","text":"MongoDB : MongoDB Documentation Reverse Engineering : Reversing Crypto the Easy Way","title":"Holy Evergreen"},{"location":"misc/badge_hints/#tanble-coalbox","text":"Frosty Keypad : \"One digit is repeated once, it's prime, and you can see which keys were used","title":"Tanble Coalbox"},{"location":"misc/badge_hints/#pepper-minstix","text":"SQLMap Tamper Scripts : Sqlmap Tamper Scripts SQL Injection : SQL Injection from OWASP Graylog : Graylog Docs Event IDs and Sysmon : (Events and Sysmon)","title":"Pepper Minstix"},{"location":"misc/badge_hints/#sugarplum-mary","text":"Event Query Language : EQL Threat Hunting Sysmon : Sysmon By Carlos Perez Linux Path : \"Green words matter, files must be found, and the terminal's $PATH matters.\"","title":"SugarPlum Mary"},{"location":"misc/badge_hints/#wunorse-openslae","text":"Jq : Parsing Zeek JSON Logs with JQ Finding Bad in Web Logs : \"Do you see any LFI , XSS , Shellshock , or SQLi ?\"","title":"Wunorse Openslae"},{"location":"misc/badge_hints/#alabaster-snowball","text":"Machine Learning : Machine Learning Use Cases for Cyber Security User's Shells : \"On Linux, a user's shell is determined by the contents of /etc/passwd\" Chatter? : \"sudo -l says I can run a command as root. What does it do?\"","title":"Alabaster Snowball"},{"location":"misc/badge_hints/#sparkle-redberry","text":"PowerShell : SANS' PowerShell Cheat Sheet RITA : RITA's homepage","title":"Sparkle Redberry"},{"location":"misc/interesting_ui/","text":"Interesting UI Elements # Unused Elves # After searching for the avatar for Krampus as part of challenge 7 I went back and looked at the rest of the elf avatars as some of the avatar images had a filename that matched the name of the elf (e.g. mintycandycane.png , kent.png ) while others used a more generic elfX.png file naming convention. elf15.png , the 6th elf from the left in the image below, is used as a generic image which is then replaced with the correct NPC's avatar. Probably a remnant from the development stages to ensure all NPCs showed up on screen, even if it was with a default image (this includes Santa himself). Worth noting is that not only do some of the Elf characters in the game use a generic elfX.png filename, there's also more elf avatar images available than are used in the game. Unused elves, from left to right: elf5.png , elf6.png , elf10.png , elf11.png , elf14.png , elf15.png (default NPC avatar), elf17.png , elf18.png , elf19.png , elf20.png , elf21.png , and elf22.png . In some cases the CSS also references the generic PNG files with an actual Elf name, even when the Elf doesn't make an appearance in the game. This is the case for both elf10.png aka Morcel Nougat and elf11.png aka Elinor Twinkletoes, two characters from last year's KringleCon event who seem to have hitched a ride in this year's CSS file. .viewport .ent.npc.npc-morcelnougat .npc-avatar { background-image: url(/images/avatars/elves/elf10.png); } .viewport .ent.npc.npc-elinoretwinkletoes .npc-avatar { background-image: url(/images/avatars/elves/elf11.png); } Elf Soldiers # Another group of avatars that tagged along from the previous event are toy and elf soldiers (6 color variants of each). I guess Santa must've thought it would be good to have a handful of muscle at the ready just in case. Luckily it wasn't needed this time around and we were able to apprehend the Tooth Fairy without the use of force. Toy Soldiers CSS class and image : .npc-toysoldier1 : /images/avatars/soldiers/kc18_soldiers_blue_2.png .npc-toysoldier2 : /images/avatars/soldiers/kc18_soldiers_green_3.png .npc-toysoldier3 : /images/avatars/soldiers/kc18_soldiers_orange_2.png .npc-toysoldier4 : /images/avatars/soldiers/kc18_soldiers_pink_1.png .npc-toysoldier5 : /images/avatars/soldiers/kc18_soldiers_red_2.png .npc-toysoldier6 : /images/avatars/soldiers/kc18_soldiers_red_3.png Elf Soldiers CSS class and image : .npc-elfsoldier1 : /images/avatars/reveal/kc18_soldiers2_blue_2.png .npc-elfsoldier2 : /images/avatars/reveal/kc18_soldiers2_green_3.png .npc-elfsoldier3 : /images/avatars/reveal/kc18_soldiers2_orange_2.png .npc-elfsoldier4 : /images/avatars/reveal/kc18_soldiers2_pink_1.png .npc-elfsoldier5 : /images/avatars/reveal/kc18_soldiers2_red_2.png .npc-elfsoldier6 : /images/avatars/reveal/kc18_soldiers2_red_3.png Netwars Krampus # The CSS also references a version of Krampus which, based on the .npc-krampus-netwars class name used, should appear in the Netwars room. Either I didn't trigger the right series of events while playing the game or this code wasn't actually used. .npc-krampus-steamtunnel , .npc-krampus-sleighroom and .npc-krampus-lastroom refer to the different instances of Krampus you talk to, except for the version of Krampus that appears to scamper away in Minty's dorm room, which uses a different type of CSS styling. As with the other CSS classes, it uses the same high-res Krampus avatar and only differs in the location name used in the class name. .viewport .ent.npc.npc-krampus-netwars .npc-avatar { width: 100px; height: 188px; background: url(/images/avatars/elves/krampus.png) no-repeat; background-size: auto 200px; background-position: 6px 3px; } Dorm Access Code # Not quite sure why Tangle Coalbox was having issues with accessing the dorm in the Frosty Keypad challenge as he could've probably just peered through the windows and see that the actual code, 7331 , is written on the left side of the dorm wall. Looks like we also have some Doctor Who fans at Elf University judging by the TARDIS drawn around the second door from the left. Lucky Elf # The second Elf from the right at the bottom right table in the Netwars room looks like a real winner. If you download the laptop image you'll see that one of the laptop screens is displaying an golden ticket and while other laptops are duplicated across some of the Netwars participants in the room, the laptop with the golden ticket is used only once. Congratulations mystery Elf! Bag of Teeth, Literally # If you're like me and thought that white pile in the top right corner of the Elf Univesity Bell Tower was just a heap of snow then you might be unpleasantly surprised. It's actually, as the file name for the image texture puts it, quite-literally-a-huge-pile-of-teeth . Say what you want about the Tooth Fairy, but that is one pretty impressive dental haul right there. Jack Frost & KringleCon 3 # The final entry of the narrative, the .narrativeCliffHanger CSS class for the final narrative entry, as well as the final note you find in the top left corner of the Elf University Bell Tower all hint at what might be in store for next year's KringleCon event. Jack Frost was apparently helping the Tooth Fairy. Cliff hanger indeed! This Christmas must now fall asleep, But next year comes, and troubles creep. And Jack Frost hasn't made a peep, And Jack Frost hasn't made a peep...","title":"Interesting UI Elements"},{"location":"misc/interesting_ui/#interesting-ui-elements","text":"","title":"Interesting UI Elements"},{"location":"misc/interesting_ui/#unused-elves","text":"After searching for the avatar for Krampus as part of challenge 7 I went back and looked at the rest of the elf avatars as some of the avatar images had a filename that matched the name of the elf (e.g. mintycandycane.png , kent.png ) while others used a more generic elfX.png file naming convention. elf15.png , the 6th elf from the left in the image below, is used as a generic image which is then replaced with the correct NPC's avatar. Probably a remnant from the development stages to ensure all NPCs showed up on screen, even if it was with a default image (this includes Santa himself). Worth noting is that not only do some of the Elf characters in the game use a generic elfX.png filename, there's also more elf avatar images available than are used in the game. Unused elves, from left to right: elf5.png , elf6.png , elf10.png , elf11.png , elf14.png , elf15.png (default NPC avatar), elf17.png , elf18.png , elf19.png , elf20.png , elf21.png , and elf22.png . In some cases the CSS also references the generic PNG files with an actual Elf name, even when the Elf doesn't make an appearance in the game. This is the case for both elf10.png aka Morcel Nougat and elf11.png aka Elinor Twinkletoes, two characters from last year's KringleCon event who seem to have hitched a ride in this year's CSS file. .viewport .ent.npc.npc-morcelnougat .npc-avatar { background-image: url(/images/avatars/elves/elf10.png); } .viewport .ent.npc.npc-elinoretwinkletoes .npc-avatar { background-image: url(/images/avatars/elves/elf11.png); }","title":"Unused Elves"},{"location":"misc/interesting_ui/#elf-soldiers","text":"Another group of avatars that tagged along from the previous event are toy and elf soldiers (6 color variants of each). I guess Santa must've thought it would be good to have a handful of muscle at the ready just in case. Luckily it wasn't needed this time around and we were able to apprehend the Tooth Fairy without the use of force. Toy Soldiers CSS class and image : .npc-toysoldier1 : /images/avatars/soldiers/kc18_soldiers_blue_2.png .npc-toysoldier2 : /images/avatars/soldiers/kc18_soldiers_green_3.png .npc-toysoldier3 : /images/avatars/soldiers/kc18_soldiers_orange_2.png .npc-toysoldier4 : /images/avatars/soldiers/kc18_soldiers_pink_1.png .npc-toysoldier5 : /images/avatars/soldiers/kc18_soldiers_red_2.png .npc-toysoldier6 : /images/avatars/soldiers/kc18_soldiers_red_3.png Elf Soldiers CSS class and image : .npc-elfsoldier1 : /images/avatars/reveal/kc18_soldiers2_blue_2.png .npc-elfsoldier2 : /images/avatars/reveal/kc18_soldiers2_green_3.png .npc-elfsoldier3 : /images/avatars/reveal/kc18_soldiers2_orange_2.png .npc-elfsoldier4 : /images/avatars/reveal/kc18_soldiers2_pink_1.png .npc-elfsoldier5 : /images/avatars/reveal/kc18_soldiers2_red_2.png .npc-elfsoldier6 : /images/avatars/reveal/kc18_soldiers2_red_3.png","title":"Elf Soldiers"},{"location":"misc/interesting_ui/#netwars-krampus","text":"The CSS also references a version of Krampus which, based on the .npc-krampus-netwars class name used, should appear in the Netwars room. Either I didn't trigger the right series of events while playing the game or this code wasn't actually used. .npc-krampus-steamtunnel , .npc-krampus-sleighroom and .npc-krampus-lastroom refer to the different instances of Krampus you talk to, except for the version of Krampus that appears to scamper away in Minty's dorm room, which uses a different type of CSS styling. As with the other CSS classes, it uses the same high-res Krampus avatar and only differs in the location name used in the class name. .viewport .ent.npc.npc-krampus-netwars .npc-avatar { width: 100px; height: 188px; background: url(/images/avatars/elves/krampus.png) no-repeat; background-size: auto 200px; background-position: 6px 3px; }","title":"Netwars Krampus"},{"location":"misc/interesting_ui/#dorm-access-code","text":"Not quite sure why Tangle Coalbox was having issues with accessing the dorm in the Frosty Keypad challenge as he could've probably just peered through the windows and see that the actual code, 7331 , is written on the left side of the dorm wall. Looks like we also have some Doctor Who fans at Elf University judging by the TARDIS drawn around the second door from the left.","title":"Dorm Access Code"},{"location":"misc/interesting_ui/#lucky-elf","text":"The second Elf from the right at the bottom right table in the Netwars room looks like a real winner. If you download the laptop image you'll see that one of the laptop screens is displaying an golden ticket and while other laptops are duplicated across some of the Netwars participants in the room, the laptop with the golden ticket is used only once. Congratulations mystery Elf!","title":"Lucky Elf"},{"location":"misc/interesting_ui/#bag-of-teeth-literally","text":"If you're like me and thought that white pile in the top right corner of the Elf Univesity Bell Tower was just a heap of snow then you might be unpleasantly surprised. It's actually, as the file name for the image texture puts it, quite-literally-a-huge-pile-of-teeth . Say what you want about the Tooth Fairy, but that is one pretty impressive dental haul right there.","title":"Bag of Teeth, Literally"},{"location":"misc/interesting_ui/#jack-frost-kringlecon-3","text":"The final entry of the narrative, the .narrativeCliffHanger CSS class for the final narrative entry, as well as the final note you find in the top left corner of the Elf University Bell Tower all hint at what might be in store for next year's KringleCon event. Jack Frost was apparently helping the Tooth Fairy. Cliff hanger indeed! This Christmas must now fall asleep, But next year comes, and troubles creep. And Jack Frost hasn't made a peep, And Jack Frost hasn't made a peep...","title":"Jack Frost &amp; KringleCon 3"},{"location":"misc/progress_tokens/","text":"Progress Tokens # As you progress through the game and solve challenges, additional token classes will be added to the hhc-game-elements div element. Tokens can be grouped under different categories like areas visited, hints given, narrative sections given, objectives given, initial chat conversations, completed chat conversations, attempted challenges, completed challeges, booth conversations, end credits, and miscellaneous events like receiving the badge upgrade. Below is an overview of all tokens I was able to collect and while I completed all main objectives and hint challenges it appears I still might have missed a few of them. For example, even after solving challenge 12 , Krampus keeps repeating the same line \"But there\u2019s still time! Solve the final challenge in your badge by blocking the bad IPs at srf.elfu.org and save the holiday season!\" Areas Visited # token-trainstation_visited token-quad_visited token-hermeyhall_visited token-netwars_visited token-library_visited token-speakerroom_visited token-dorm_visited token-mintydorm_visited token-mintycloset_visited token-steamtunnels_visited token-studentunion_visited token-sleighshop_visited token-track1_visited token-track2_visited token-track3_visited token-track4_visited token-track5_visited token-track6_visited token-track7_visited token-finale_visited Hints # token-give-hint-edBasics token-give-hint-bitting1 token-give-hint-bitting2 token-give-hint-trail token-give-hint-deepbluecli1 token-give-hint-deepbluecli2 token-give-hint-iptables token-give-hint-mongo token-give-hint-keypad token-give-hint-sqlmap1 token-give-hint-sqlmap2 token-give-hint-eql token-give-hint-graylog1 token-give-hint-graylog2 token-give-hint-consolehack1 token-give-hint-consolehack2 token-give-hint-consolehack3 token-give-hint-consolehack4 token-give-hint-consolehack5 token-give-hint-consolehack6 token-give-hint-elfscrow1 token-give-hint-sysmon token-give-hint-jq token-give-hint-path token-give-hint-flightroute1 token-give-hint-flightroute2 token-give-hint-powershell token-give-hint-capteha1 token-give-hint-rita1 token-give-hint-nyanshell1 token-give-hint-nyanshell2 Narrative # token-giveNarrative_MeetSanta token-giveNarrative_narrativeCapteha token-giveNarrative_narrativeDovesFound token-giveNarrative_narrativeTFPlotReveal token-giveNarrative_narrativeMeetKrampus Give Objective # token-give-obj-splunk token-give-obj-bitting token-give-obj-keybitting token-give-obj-elfscrow token-give-obj-deepbluecli token-give-obj-capteha token-give-obj-turtledoves token-give-obj-flightroute token-give-obj-consolehack token-give-obj-redactedpdf token-give-obj-sqlmap token-give-obj-eql token-give-obj-rita Initial # token-alabastersnowball^^^initial token-shinnyupatree^^^initial token-wunorseopenslae^^^initial token-pepperminstix^^^initial token-kenttinseltooth^^^initial token-krampus-steamtunnel^^^initial token-santa-lastroom^^^initial token-turtledoves^^^initial token-sugarplummary^^^initial token-mintycandycane^^^initial token-santa-quad^^^initial token-bushyevergreen^^^initial token-profbanas^^^initial token-hollyevergreen^^^initial token-toothfairy-lastroom^^^initial token-krampus-lastroom^^^initial token-krampus-sleighroom^^^initial token-santa-trainstation^^^initial token-tanglecoalbox^^^initial token-toothfairy-sleighroom^^^initial token-sparkleredberry^^^initial Attempted # token-bitting-cutter_attempted token-bitting-keyhole_attempted token-iptables_attempted token-graylog_attempted token-nyanshell_attempted token-keypad_attempted token-trail_attempted token-edescape_attempted token-fridosleigh_attempted token-jq_attempted token-powershell_attempted token-path_attempted token-mongo_attempted token-sleighroutefinder_attempted Completed # token-bitting_completed token-bitting-keyhole_completed token-iptables_completed token-graylog_completed token-nyanshell_completed token-keypad_completed token-trail_completed token-edescape_completed token-capteha_completed token-jq_completed token-powershell_completed token-path_completed token-mongo_completed token-deepbluecli_completed token-consolehack_completed token-eql_completed token-sqlmap_completed token-turtledoves_completed token-rita_completed token-elfscrow_completed token-redacted_completed token-splunk_completed token-flightroute_completed token-hhc19_completed Initial Chat # token-initial-chat-kenttinseltooth token-initial-chat-wunorseopenslae token-initial-chat-sparkleredberry token-initial-chat-profbanas token-initial-chat-santa-trainstation token-initial-chat-bushyevergreen token-initial-chat-sugarplummary token-initial-chat-pepperminstix token-initial-chat-santa-quad token-initial-chat-tanglecoalbox token-initial-chat-mintycandycane token-initial-chat-alabastersnowball token-initial-chat-hollyevergreen Chat Complete # token-kenttinseltooth^^^chat-iptables_complete token-wunorseopenslae^^^chat-jq_complete token-sparkleredberry^^^chat-powershell_complete token-profbanas^^^chat-splunk_completed token-bushyevergreen^^^chat-edescape_completed token-sugarplummary^^^chat-path_complete token-pepperminstix^^^chat-graylog_complete token-tanglecoalbox^^^chat-keypad_completed token-mintycandycane^^^chat-trail_complete token-alabastersnowball^^^chat-nyanshell_complete token-hollyevergreen^^^chat-mongo_complete token-shinnyupatree^^^chat-consolehack-completed Booths Initial # token-googlebooth^^^initial token-splunkbooth^^^initial token-stibooth^^^initial token-swagbooth^^^initial Booths Talked # token-talked-to-googlebooth token-talked-to-splunkbooth token-talked-to-stibooth token-talked-to-swagbooth Credits # token-rollCredits1 token-rollCredits2 token-rollCredits3 Other # token-turtledoves token-talktosanta token-santa-quad^^^phaseTwo token-shinnyupatree^^^chat-post-teleport token-give-achievement-teleport token-krampus-steamtunnel^^^token-completechal7 token-krampus-steamtunnel^^^token-completechal8","title":"Progress Tokens"},{"location":"misc/progress_tokens/#progress-tokens","text":"As you progress through the game and solve challenges, additional token classes will be added to the hhc-game-elements div element. Tokens can be grouped under different categories like areas visited, hints given, narrative sections given, objectives given, initial chat conversations, completed chat conversations, attempted challenges, completed challeges, booth conversations, end credits, and miscellaneous events like receiving the badge upgrade. Below is an overview of all tokens I was able to collect and while I completed all main objectives and hint challenges it appears I still might have missed a few of them. For example, even after solving challenge 12 , Krampus keeps repeating the same line \"But there\u2019s still time! Solve the final challenge in your badge by blocking the bad IPs at srf.elfu.org and save the holiday season!\"","title":"Progress Tokens"},{"location":"misc/progress_tokens/#areas-visited","text":"token-trainstation_visited token-quad_visited token-hermeyhall_visited token-netwars_visited token-library_visited token-speakerroom_visited token-dorm_visited token-mintydorm_visited token-mintycloset_visited token-steamtunnels_visited token-studentunion_visited token-sleighshop_visited token-track1_visited token-track2_visited token-track3_visited token-track4_visited token-track5_visited token-track6_visited token-track7_visited token-finale_visited","title":"Areas Visited"},{"location":"misc/progress_tokens/#hints","text":"token-give-hint-edBasics token-give-hint-bitting1 token-give-hint-bitting2 token-give-hint-trail token-give-hint-deepbluecli1 token-give-hint-deepbluecli2 token-give-hint-iptables token-give-hint-mongo token-give-hint-keypad token-give-hint-sqlmap1 token-give-hint-sqlmap2 token-give-hint-eql token-give-hint-graylog1 token-give-hint-graylog2 token-give-hint-consolehack1 token-give-hint-consolehack2 token-give-hint-consolehack3 token-give-hint-consolehack4 token-give-hint-consolehack5 token-give-hint-consolehack6 token-give-hint-elfscrow1 token-give-hint-sysmon token-give-hint-jq token-give-hint-path token-give-hint-flightroute1 token-give-hint-flightroute2 token-give-hint-powershell token-give-hint-capteha1 token-give-hint-rita1 token-give-hint-nyanshell1 token-give-hint-nyanshell2","title":"Hints"},{"location":"misc/progress_tokens/#narrative","text":"token-giveNarrative_MeetSanta token-giveNarrative_narrativeCapteha token-giveNarrative_narrativeDovesFound token-giveNarrative_narrativeTFPlotReveal token-giveNarrative_narrativeMeetKrampus","title":"Narrative"},{"location":"misc/progress_tokens/#give-objective","text":"token-give-obj-splunk token-give-obj-bitting token-give-obj-keybitting token-give-obj-elfscrow token-give-obj-deepbluecli token-give-obj-capteha token-give-obj-turtledoves token-give-obj-flightroute token-give-obj-consolehack token-give-obj-redactedpdf token-give-obj-sqlmap token-give-obj-eql token-give-obj-rita","title":"Give Objective"},{"location":"misc/progress_tokens/#initial","text":"token-alabastersnowball^^^initial token-shinnyupatree^^^initial token-wunorseopenslae^^^initial token-pepperminstix^^^initial token-kenttinseltooth^^^initial token-krampus-steamtunnel^^^initial token-santa-lastroom^^^initial token-turtledoves^^^initial token-sugarplummary^^^initial token-mintycandycane^^^initial token-santa-quad^^^initial token-bushyevergreen^^^initial token-profbanas^^^initial token-hollyevergreen^^^initial token-toothfairy-lastroom^^^initial token-krampus-lastroom^^^initial token-krampus-sleighroom^^^initial token-santa-trainstation^^^initial token-tanglecoalbox^^^initial token-toothfairy-sleighroom^^^initial token-sparkleredberry^^^initial","title":"Initial"},{"location":"misc/progress_tokens/#attempted","text":"token-bitting-cutter_attempted token-bitting-keyhole_attempted token-iptables_attempted token-graylog_attempted token-nyanshell_attempted token-keypad_attempted token-trail_attempted token-edescape_attempted token-fridosleigh_attempted token-jq_attempted token-powershell_attempted token-path_attempted token-mongo_attempted token-sleighroutefinder_attempted","title":"Attempted"},{"location":"misc/progress_tokens/#completed","text":"token-bitting_completed token-bitting-keyhole_completed token-iptables_completed token-graylog_completed token-nyanshell_completed token-keypad_completed token-trail_completed token-edescape_completed token-capteha_completed token-jq_completed token-powershell_completed token-path_completed token-mongo_completed token-deepbluecli_completed token-consolehack_completed token-eql_completed token-sqlmap_completed token-turtledoves_completed token-rita_completed token-elfscrow_completed token-redacted_completed token-splunk_completed token-flightroute_completed token-hhc19_completed","title":"Completed"},{"location":"misc/progress_tokens/#initial-chat","text":"token-initial-chat-kenttinseltooth token-initial-chat-wunorseopenslae token-initial-chat-sparkleredberry token-initial-chat-profbanas token-initial-chat-santa-trainstation token-initial-chat-bushyevergreen token-initial-chat-sugarplummary token-initial-chat-pepperminstix token-initial-chat-santa-quad token-initial-chat-tanglecoalbox token-initial-chat-mintycandycane token-initial-chat-alabastersnowball token-initial-chat-hollyevergreen","title":"Initial Chat"},{"location":"misc/progress_tokens/#chat-complete","text":"token-kenttinseltooth^^^chat-iptables_complete token-wunorseopenslae^^^chat-jq_complete token-sparkleredberry^^^chat-powershell_complete token-profbanas^^^chat-splunk_completed token-bushyevergreen^^^chat-edescape_completed token-sugarplummary^^^chat-path_complete token-pepperminstix^^^chat-graylog_complete token-tanglecoalbox^^^chat-keypad_completed token-mintycandycane^^^chat-trail_complete token-alabastersnowball^^^chat-nyanshell_complete token-hollyevergreen^^^chat-mongo_complete token-shinnyupatree^^^chat-consolehack-completed","title":"Chat Complete"},{"location":"misc/progress_tokens/#booths-initial","text":"token-googlebooth^^^initial token-splunkbooth^^^initial token-stibooth^^^initial token-swagbooth^^^initial","title":"Booths Initial"},{"location":"misc/progress_tokens/#booths-talked","text":"token-talked-to-googlebooth token-talked-to-splunkbooth token-talked-to-stibooth token-talked-to-swagbooth","title":"Booths Talked"},{"location":"misc/progress_tokens/#credits","text":"token-rollCredits1 token-rollCredits2 token-rollCredits3","title":"Credits"},{"location":"misc/progress_tokens/#other","text":"token-turtledoves token-talktosanta token-santa-quad^^^phaseTwo token-shinnyupatree^^^chat-post-teleport token-give-achievement-teleport token-krampus-steamtunnel^^^token-completechal7 token-krampus-steamtunnel^^^token-completechal8","title":"Other"},{"location":"misc/user_accounts/","text":"User Accounts # Nyanshell # Username : alabaster_snowball Password : Password2 Splunk # URL : https://splunk.elfu.org Username : elf Password : elfsocks Graylog # URL : https://graylog.elfu.org Username : elfustudent Password : elfustudent Sleigh Route Finder # URL : https://srf.elfu.org Username : admin Password : 924158F9522B3744F5FCD4D10FAC4356","title":"User Accounts"},{"location":"misc/user_accounts/#user-accounts","text":"","title":"User Accounts"},{"location":"misc/user_accounts/#nyanshell","text":"Username : alabaster_snowball Password : Password2","title":"Nyanshell"},{"location":"misc/user_accounts/#splunk","text":"URL : https://splunk.elfu.org Username : elf Password : elfsocks","title":"Splunk"},{"location":"misc/user_accounts/#graylog","text":"URL : https://graylog.elfu.org Username : elfustudent Password : elfustudent","title":"Graylog"},{"location":"misc/user_accounts/#sleigh-route-finder","text":"URL : https://srf.elfu.org Username : admin Password : 924158F9522B3744F5FCD4D10FAC4356","title":"Sleigh Route Finder"},{"location":"scripts/frido-sleigh-capteha/","text":"Frido Sleigh CAPTEHA # #!/usr/bin/python3 # Image Recognition Using Tensorflow Exmaple. # Code based on example at: # https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/examples/label_image/label_image.py import os import base64 os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' import tensorflow as tf # noqa tf.logging.set_verbosity(tf.logging.ERROR) import numpy as np # noqa import threading # noqa import queue # noqa import time # noqa import requests # noqa import sys # noqa import json # noqa # sudo apt install python3-pip # sudo python3 -m pip install --upgrade pip # sudo python3 -m pip install --upgrade setuptools # sudo python3 -m pip install --upgrade tensorflow==1.15 def load_labels(label_file): \"\"\"Load labels.\"\"\" label = [] proto_as_ascii_lines = tf.gfile.GFile(label_file).readlines() for l in proto_as_ascii_lines: label.append(l.rstrip()) return label def predict_image( q, sess, graph, image_bytes, img_uuid, labels, input_operation, output_operation): \"\"\"Predict image.\"\"\" image = read_tensor_from_image_bytes(image_bytes) results = sess.run(output_operation.outputs[0], { input_operation.outputs[0]: image }) results = np.squeeze(results) prediction = results.argsort()[-5:][::-1][0] q.put({ 'img_uuid': img_uuid, 'prediction': labels[prediction].title(), 'percent': results[prediction] }) def load_graph(model_file): \"\"\"Load graph.\"\"\" graph = tf.Graph() graph_def = tf.GraphDef() with open(model_file, \"rb\") as f: graph_def.ParseFromString(f.read()) with graph.as_default(): tf.import_graph_def(graph_def) return graph def read_tensor_from_image_bytes( imagebytes, input_height=128, input_width=128, input_mean=0, input_std=255): \"\"\"Read Tensor from image bytes.\"\"\" image_reader = tf.image.decode_png( imagebytes, channels=3, name=\"png_reader\" ) float_caster = tf.cast(image_reader, tf.float32) dims_expander = tf.expand_dims(float_caster, 0) resized = tf.image.resize_bilinear( dims_expander, [input_height, input_width] ) normalized = tf.divide(tf.subtract(resized, [input_mean]), [input_std]) sess = tf.compat.v1.Session() result = sess.run(normalized) return result def main(): \"\"\"Execute.\"\"\" # Loading the Trained Machine Learning Model created from # running retrain.py on the training_images directory graph = load_graph('./tmp/retrain_tmp/output_graph.pb') labels = load_labels(\"./tmp/retrain_tmp/output_labels.txt\") # Load up our session input_operation = graph.get_operation_by_name(\"import/Placeholder\") output_operation = graph.get_operation_by_name(\"import/final_result\") sess = tf.compat.v1.Session(graph=graph) url = \"https://fridosleigh.com/\" answers = [] # Create session s = requests.Session() # Get captcha images r = s.post(f'{url}api/capteha/request') if (r.json()['request']): images = r.json()['images'] types = [x.strip() for x in r.json()['select_type'].split(',')] types[-1] = types[-1].replace('and ', '') # Can use queues and threading to spead up the processing q = queue.Queue() # Going to interate over each of our images. for image in images: img_uuid = image['uuid'] img_base64 = image['base64'] print('Processing Image {}'.format(img_uuid)) # We don't want to process too many images at once. 10 threads max while len(threading.enumerate()) > 10: time.sleep(0.0001) # Predict_image function is expecting png image bytes so we read # image as 'rb' to get a bytes object image_bytes = base64.b64decode(img_base64) threading.Thread( target=predict_image, args=( q, sess, graph, image_bytes, img_uuid, labels, input_operation, output_operation ) ).start() print('Waiting For Threads to Finish...') while q.qsize() < len(images): time.sleep(0.001) # Getting a list of all threads returned results prediction_results = [q.get() for x in range(q.qsize())] answers = [] # What are we looking for? print(f'Looking for {types}') # Get the matching images for prediction in prediction_results: if prediction['prediction'] in types: print(f\"{prediction['img_uuid']} is a {prediction['prediction']}.\") answers.append(prediction['img_uuid']) final_answer = ','.join(answers) # Submit CAPTHEHA answers json_resp = json.loads( s.post( f'{url}api/capteha/submit', data={'answer': final_answer} ).text ) # WOMP WOMP if not json_resp['request']: # If it fails just run again. ML might get one wrong occasionally print('FAILED MACHINE LEARNING GUESS') print('-------\\nOur ML Guess:\\n--------\\n{}'.format(final_answer)) print('------\\nServer Response:\\n------\\n{}'.format(json_resp['data'])) sys.exit(1) # Found the CAPTEHA print('CAPTEHA Solved!') # If we get to here, we are successful and can submit a bunch # of entries till we win userinfo = { 'name': 'Krampus Hollyfeld', 'email': 'crahan@n00.be', 'age': 180, 'about': \"Cause they're so flippin yummy!\", 'favorites': 'thickmints' } # If we win the once-per minute drawing, it will tell us we were emailed. # Should be no more than 200 times before we win. If more, somethings # wrong. entry_response = '' entry_count = 1 while 'crahan@n00.be' not in entry_response and entry_count < 200: print( f'Submitting lots of entries until ' f'we win the contest! Entry #{entry_count}' ) entry_response = s.post( f'{url}api/entry', data=userinfo ).text entry_count += 1 print(entry_response) if __name__ == \"__main__\": main()","title":"Frido Sleigh CAPTEHA"},{"location":"scripts/frido-sleigh-capteha/#frido-sleigh-capteha","text":"#!/usr/bin/python3 # Image Recognition Using Tensorflow Exmaple. # Code based on example at: # https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/examples/label_image/label_image.py import os import base64 os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' import tensorflow as tf # noqa tf.logging.set_verbosity(tf.logging.ERROR) import numpy as np # noqa import threading # noqa import queue # noqa import time # noqa import requests # noqa import sys # noqa import json # noqa # sudo apt install python3-pip # sudo python3 -m pip install --upgrade pip # sudo python3 -m pip install --upgrade setuptools # sudo python3 -m pip install --upgrade tensorflow==1.15 def load_labels(label_file): \"\"\"Load labels.\"\"\" label = [] proto_as_ascii_lines = tf.gfile.GFile(label_file).readlines() for l in proto_as_ascii_lines: label.append(l.rstrip()) return label def predict_image( q, sess, graph, image_bytes, img_uuid, labels, input_operation, output_operation): \"\"\"Predict image.\"\"\" image = read_tensor_from_image_bytes(image_bytes) results = sess.run(output_operation.outputs[0], { input_operation.outputs[0]: image }) results = np.squeeze(results) prediction = results.argsort()[-5:][::-1][0] q.put({ 'img_uuid': img_uuid, 'prediction': labels[prediction].title(), 'percent': results[prediction] }) def load_graph(model_file): \"\"\"Load graph.\"\"\" graph = tf.Graph() graph_def = tf.GraphDef() with open(model_file, \"rb\") as f: graph_def.ParseFromString(f.read()) with graph.as_default(): tf.import_graph_def(graph_def) return graph def read_tensor_from_image_bytes( imagebytes, input_height=128, input_width=128, input_mean=0, input_std=255): \"\"\"Read Tensor from image bytes.\"\"\" image_reader = tf.image.decode_png( imagebytes, channels=3, name=\"png_reader\" ) float_caster = tf.cast(image_reader, tf.float32) dims_expander = tf.expand_dims(float_caster, 0) resized = tf.image.resize_bilinear( dims_expander, [input_height, input_width] ) normalized = tf.divide(tf.subtract(resized, [input_mean]), [input_std]) sess = tf.compat.v1.Session() result = sess.run(normalized) return result def main(): \"\"\"Execute.\"\"\" # Loading the Trained Machine Learning Model created from # running retrain.py on the training_images directory graph = load_graph('./tmp/retrain_tmp/output_graph.pb') labels = load_labels(\"./tmp/retrain_tmp/output_labels.txt\") # Load up our session input_operation = graph.get_operation_by_name(\"import/Placeholder\") output_operation = graph.get_operation_by_name(\"import/final_result\") sess = tf.compat.v1.Session(graph=graph) url = \"https://fridosleigh.com/\" answers = [] # Create session s = requests.Session() # Get captcha images r = s.post(f'{url}api/capteha/request') if (r.json()['request']): images = r.json()['images'] types = [x.strip() for x in r.json()['select_type'].split(',')] types[-1] = types[-1].replace('and ', '') # Can use queues and threading to spead up the processing q = queue.Queue() # Going to interate over each of our images. for image in images: img_uuid = image['uuid'] img_base64 = image['base64'] print('Processing Image {}'.format(img_uuid)) # We don't want to process too many images at once. 10 threads max while len(threading.enumerate()) > 10: time.sleep(0.0001) # Predict_image function is expecting png image bytes so we read # image as 'rb' to get a bytes object image_bytes = base64.b64decode(img_base64) threading.Thread( target=predict_image, args=( q, sess, graph, image_bytes, img_uuid, labels, input_operation, output_operation ) ).start() print('Waiting For Threads to Finish...') while q.qsize() < len(images): time.sleep(0.001) # Getting a list of all threads returned results prediction_results = [q.get() for x in range(q.qsize())] answers = [] # What are we looking for? print(f'Looking for {types}') # Get the matching images for prediction in prediction_results: if prediction['prediction'] in types: print(f\"{prediction['img_uuid']} is a {prediction['prediction']}.\") answers.append(prediction['img_uuid']) final_answer = ','.join(answers) # Submit CAPTHEHA answers json_resp = json.loads( s.post( f'{url}api/capteha/submit', data={'answer': final_answer} ).text ) # WOMP WOMP if not json_resp['request']: # If it fails just run again. ML might get one wrong occasionally print('FAILED MACHINE LEARNING GUESS') print('-------\\nOur ML Guess:\\n--------\\n{}'.format(final_answer)) print('------\\nServer Response:\\n------\\n{}'.format(json_resp['data'])) sys.exit(1) # Found the CAPTEHA print('CAPTEHA Solved!') # If we get to here, we are successful and can submit a bunch # of entries till we win userinfo = { 'name': 'Krampus Hollyfeld', 'email': 'crahan@n00.be', 'age': 180, 'about': \"Cause they're so flippin yummy!\", 'favorites': 'thickmints' } # If we win the once-per minute drawing, it will tell us we were emailed. # Should be no more than 200 times before we win. If more, somethings # wrong. entry_response = '' entry_count = 1 while 'crahan@n00.be' not in entry_response and entry_count < 200: print( f'Submitting lots of entries until ' f'we win the contest! Entry #{entry_count}' ) entry_response = s.post( f'{url}api/entry', data=userinfo ).text entry_count += 1 print(entry_response) if __name__ == \"__main__\": main()","title":"Frido Sleigh CAPTEHA"},{"location":"scripts/frosty-keypad/","text":"Frosty Keypad # #!/usr/bin/env prime \"\"\"Tangle Coalbox Frosty Keypad challenge.\"\"\" import itertools def is_prime(number): \"\"\"Verify if a number is a prime.\"\"\" return 2 in [number, 2**number % number] digit_sets = [ ['1', '1', '3', '7'], ['1', '3', '3', '7'], ['1', '3', '7', '7'] ] primes = [] for digits in digit_sets: for subset in itertools.permutations(digits): val = int(''.join(subset)) if is_prime(val) and val not in primes: primes.append(val) print(f'{val} is a prime number')","title":"Frosty Keypad"},{"location":"scripts/frosty-keypad/#frosty-keypad","text":"#!/usr/bin/env prime \"\"\"Tangle Coalbox Frosty Keypad challenge.\"\"\" import itertools def is_prime(number): \"\"\"Verify if a number is a prime.\"\"\" return 2 in [number, 2**number % number] digit_sets = [ ['1', '1', '3', '7'], ['1', '3', '3', '7'], ['1', '3', '7', '7'] ] primes = [] for digits in digit_sets: for subset in itertools.permutations(digits): val = int(''.join(subset)) if is_prime(val) and val not in primes: primes.append(val) print(f'{val} is a prime number')","title":"Frosty Keypad"},{"location":"scripts/poisoned-source-filter/","text":"Poisoned Source Filter # #!/usr/bin/env python \"\"\"Find matching user_agent strings.\"\"\" def main(): \"\"\"Execute.\"\"\" file_bad = 'IPs_bad.csv' file_all = 'IPs_all.csv' list_bad = [] list_all = [] # Read the full data log with open(file_all) as fp: line = fp.readline() while line: list_all.append(line.split('\\t')) line = fp.readline() # Read the bad IP data and match on user_agent but only # keep the results if less than 4 matches are found. with open(file_bad) as fp: line = fp.readline() while line: tmp = [] line_bad = line.split('\\t') for line_all in list_all: if line_all[4] == line_bad[4]: tmp.append(line_all[0]) # Only add if less than 4 matches if len(tmp) < 4: list_bad.extend(tmp) # Add the original IP as well list_bad.append(line_bad[0]) line = fp.readline() # Remove duplicates list_bad = list(dict.fromkeys(list_bad)) # Tadaaaaa! print(f'Badness: {\",\".join(list_bad)}') if __name__ == \"__main__\": main()","title":"Poisoned Source Filter"},{"location":"scripts/poisoned-source-filter/#poisoned-source-filter","text":"#!/usr/bin/env python \"\"\"Find matching user_agent strings.\"\"\" def main(): \"\"\"Execute.\"\"\" file_bad = 'IPs_bad.csv' file_all = 'IPs_all.csv' list_bad = [] list_all = [] # Read the full data log with open(file_all) as fp: line = fp.readline() while line: list_all.append(line.split('\\t')) line = fp.readline() # Read the bad IP data and match on user_agent but only # keep the results if less than 4 matches are found. with open(file_bad) as fp: line = fp.readline() while line: tmp = [] line_bad = line.split('\\t') for line_all in list_all: if line_all[4] == line_bad[4]: tmp.append(line_all[0]) # Only add if less than 4 matches if len(tmp) < 4: list_bad.extend(tmp) # Add the original IP as well list_bad.append(line_bad[0]) line = fp.readline() # Remove duplicates list_bad = list(dict.fromkeys(list_bad)) # Tadaaaaa! print(f'Badness: {\",\".join(list_bad)}') if __name__ == \"__main__\": main()","title":"Poisoned Source Filter"}]}